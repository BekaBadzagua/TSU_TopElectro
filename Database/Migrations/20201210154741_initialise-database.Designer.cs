// <auto-generated />
using System;
using Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201210154741_initialise-database")]
    partial class initialisedatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Database.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryGroupId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryGroupId = 1,
                            Name = "Retro"
                        },
                        new
                        {
                            Id = 2,
                            CategoryGroupId = 1,
                            Name = "Vintage"
                        },
                        new
                        {
                            Id = 3,
                            CategoryGroupId = 2,
                            Name = "InnerRosets"
                        },
                        new
                        {
                            Id = 4,
                            CategoryGroupId = 2,
                            Name = "OuterRosets"
                        },
                        new
                        {
                            Id = 5,
                            CategoryGroupId = 2,
                            Name = "Trigger"
                        });
                });

            modelBuilder.Entity("Database.Entities.CategoryGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cabels"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rosets"
                        });
                });

            modelBuilder.Entity("Database.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Colors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Materials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoreInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SQ")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Colors = "red silver black",
                            Date = new DateTime(2020, 12, 10, 19, 47, 40, 529, DateTimeKind.Local).AddTicks(6403),
                            Materials = "wood ceramic",
                            Name = "RetroCabel1",
                            Price = 4.5,
                            SQ = "SQ2801-0112"
                        },
                        new
                        {
                            Id = 2,
                            Colors = "red silver black",
                            Date = new DateTime(2020, 12, 10, 19, 47, 40, 531, DateTimeKind.Local).AddTicks(6245),
                            Materials = "wood ceramic",
                            Name = "product 2",
                            Price = 41.5,
                            SQ = "SQ2801-0112"
                        },
                        new
                        {
                            Id = 3,
                            Colors = "red silver black",
                            Date = new DateTime(2020, 12, 10, 19, 47, 40, 531, DateTimeKind.Local).AddTicks(6286),
                            Materials = "wood ceramic",
                            Name = "my cable3",
                            Price = 4.5,
                            SQ = "SQ2801-0112"
                        },
                        new
                        {
                            Id = 4,
                            Colors = "red silver black",
                            Date = new DateTime(2020, 12, 10, 19, 47, 40, 531, DateTimeKind.Local).AddTicks(6291),
                            Materials = "wood ceramic",
                            Name = "dog 32",
                            Price = 4.5,
                            SQ = "SQ2801-0112"
                        });
                });

            modelBuilder.Entity("Database.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("Database.Entities.Category", b =>
                {
                    b.HasOne("Database.Entities.CategoryGroup", "CategoryGroup")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryGroup");
                });

            modelBuilder.Entity("Database.Entities.ProductCategory", b =>
                {
                    b.HasOne("Database.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Product", "Product")
                        .WithMany("Categories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Database.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Database.Entities.CategoryGroup", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Database.Entities.Product", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
